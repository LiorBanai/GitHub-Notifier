name: .NET Core Desktop

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:

  build:

    strategy:
      matrix:
        configuration: [Release, Debug]

    runs-on: windows-latest  # For a list of available runner types, refer to 
                             # https://help.github.com/en/actions/reference/workflow-syntax-for-github-actions#jobsjob_idruns-on

    env:
      Solution_Name: GitHubNotifier.sln                       # Replace with your solution name, i.e. MyWpfApp.sln.
      Test_Project_Path: GitHubNotifier.UnitTests\GitHubNotifier.UnitTests.csproj     # Replace with the path to your test project, i.e. MyWpfApp.Tests\MyWpfApp.Tests.csproj.
     
    steps:
    - name: Checkout
      uses: actions/checkout@v2
      with:
        fetch-depth: 0

    # Install the .NET Core workload
    - name: Install .NET Core
      uses: actions/setup-dotnet@v4.1.0
      with:
        dotnet-version: 9.0.x

    # Add  MSBuild to the PATH: https://github.com/microsoft/setup-msbuild
    - name: Setup MSBuild.exe
      uses: microsoft/setup-msbuild@v1.3.1
    
    # Restore the application to populate the obj folder with RuntimeIdentifiers
    - name: Restore the application
      run: msbuild $env:Solution_Name /t:Restore /p:Configuration=$env:Configuration
      env:
        Configuration: ${{ matrix.configuration }}
    
    # Buid the application 
    - name: Build the application
      run: msbuild $env:Solution_Name /t:Rebuild /p:Configuration=$env:Configuration
      env:
        Configuration: ${{ matrix.configuration }}
    # Execute all unit tests in the solution
    - name: Execute unit tests
      run: dotnet test

    # Publish Artifacts 
    - name: 'Publish Artifacts'   
      uses: actions/upload-artifact@v4.4.0
      with:
        name:  artifactory_${{ matrix.configuration }}
        path: ./GitHubNotifier/bin/${{ matrix.configuration }}
